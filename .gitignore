# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# RustRover
# JetBrains specific template is maintained in a separate JetBrains.gitignore that can
# be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# and can be added to the global gitignore or merged into this file. For a more nuclear
# option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Demo and documentation artifacts
demo_narrative*.md
*.demo
*.example
realistic_conversations.json

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# Environment variables
.env
.env.local
.env.*.local

# Editor directories and files
*.swp
*.swo
*~
.netrwhist

# Rust specific
# Debug artifacts
*.dSYM/

# Incremental compilation cache
incremental/

# rustdoc
doc/

# Benchmark results
benches/target/

# Code coverage
*.profraw
*.profdata
cobertura.xml
lcov.info
coverage/

# Dependency directories
vendor/

# Build directories
build/
dist/
out/

# Log files
*.log
logs/

# Test results
test-results/
*.test

# Temporary files
tmp/
temp/
*.tmp

# Cache directories
.cache/
cache/

# Package files
*.tar.gz
*.zip
*.7z
*.rar

# Database files
*.db
*.sqlite
*.sqlite3

# Backup files
*.bak
*.backup
*.old

# Node modules (if using any JavaScript tooling)
node_modules/

# Python (if using any Python scripts)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
venv/
ENV/
pip-log.txt
pip-delete-this-directory.txt

# Secrets and credentials
*.key
*.pem
*.p12
*.pfx
secrets/
credentials/

# Local configuration
config.local.toml
settings.local.json

# Documentation build artifacts
_build/
_site/
site/

# Rust analyzer
rust-project.json

# Cargo configuration (local overrides)
.cargo/config.toml

# Generated files
generated/
gen/

# Binary files (add specific extensions as needed)
*.exe
*.dll
*.so
*.dylib

# Archives (uncomment if needed)
# *.tar
# *.jar

# Media files (uncomment if needed)
# *.mp4
# *.mp3
# *.wav
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.svg

# Ignore all dotfiles except specific ones
.*
!.gitignore
!.gitattributes
!.github/
!.gitlab-ci.yml
!.travis.yml